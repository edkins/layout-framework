# Generated from Layout.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,12,99,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
        7,4,7,62,8,7,11,7,12,7,63,1,7,1,7,4,7,68,8,7,11,7,12,7,69,1,8,3,
        8,73,8,8,1,8,4,8,76,8,8,11,8,12,8,77,1,9,1,9,1,9,1,9,1,9,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,4,11,94,8,11,11,11,12,11,95,
        1,11,1,11,0,0,12,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,1,0,6,1,0,48,57,1,0,120,120,1,0,45,45,1,0,35,35,2,0,48,
        57,97,102,3,0,9,10,13,13,32,32,103,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
        0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
        0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,1,25,1,0,
        0,0,3,34,1,0,0,0,5,36,1,0,0,0,7,38,1,0,0,0,9,43,1,0,0,0,11,46,1,
        0,0,0,13,53,1,0,0,0,15,61,1,0,0,0,17,72,1,0,0,0,19,79,1,0,0,0,21,
        84,1,0,0,0,23,93,1,0,0,0,25,26,5,118,0,0,26,27,5,105,0,0,27,28,5,
        101,0,0,28,29,5,119,0,0,29,30,5,112,0,0,30,31,5,111,0,0,31,32,5,
        114,0,0,32,33,5,116,0,0,33,2,1,0,0,0,34,35,5,123,0,0,35,4,1,0,0,
        0,36,37,5,125,0,0,37,6,1,0,0,0,38,39,5,103,0,0,39,40,5,114,0,0,40,
        41,5,105,0,0,41,42,5,100,0,0,42,8,1,0,0,0,43,44,5,45,0,0,44,45,5,
        45,0,0,45,10,1,0,0,0,46,47,5,115,0,0,47,48,5,99,0,0,48,49,5,114,
        0,0,49,50,5,111,0,0,50,51,5,108,0,0,51,52,5,108,0,0,52,12,1,0,0,
        0,53,54,5,98,0,0,54,55,5,111,0,0,55,56,5,117,0,0,56,57,5,110,0,0,
        57,58,5,100,0,0,58,59,5,115,0,0,59,14,1,0,0,0,60,62,7,0,0,0,61,60,
        1,0,0,0,62,63,1,0,0,0,63,61,1,0,0,0,63,64,1,0,0,0,64,65,1,0,0,0,
        65,67,7,1,0,0,66,68,7,0,0,0,67,66,1,0,0,0,68,69,1,0,0,0,69,67,1,
        0,0,0,69,70,1,0,0,0,70,16,1,0,0,0,71,73,7,2,0,0,72,71,1,0,0,0,72,
        73,1,0,0,0,73,75,1,0,0,0,74,76,7,0,0,0,75,74,1,0,0,0,76,77,1,0,0,
        0,77,75,1,0,0,0,77,78,1,0,0,0,78,18,1,0,0,0,79,80,7,3,0,0,80,81,
        7,4,0,0,81,82,7,4,0,0,82,83,7,4,0,0,83,20,1,0,0,0,84,85,7,3,0,0,
        85,86,7,4,0,0,86,87,7,4,0,0,87,88,7,4,0,0,88,89,7,4,0,0,89,90,7,
        4,0,0,90,91,7,4,0,0,91,22,1,0,0,0,92,94,7,5,0,0,93,92,1,0,0,0,94,
        95,1,0,0,0,95,93,1,0,0,0,95,96,1,0,0,0,96,97,1,0,0,0,97,98,6,11,
        0,0,98,24,1,0,0,0,6,0,63,69,72,77,95,1,6,0,0
    ]

class LayoutLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    DIMS = 8
    NUM = 9
    COLOR3 = 10
    COLOR6 = 11
    WS = 12

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'viewport'", "'{'", "'}'", "'grid'", "'--'", "'scroll'", "'bounds'" ]

    symbolicNames = [ "<INVALID>",
            "DIMS", "NUM", "COLOR3", "COLOR6", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "DIMS", "NUM", "COLOR3", "COLOR6", "WS" ]

    grammarFileName = "Layout.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


